{"version":3,"file":"infiniteQueryOptions.mjs","sources":["../../src/infiniteQueryOptions.ts"],"sourcesContent":["import type { UseInfiniteQueryOptions } from './types'\nimport type {\n  InfiniteData,\n  NonUndefinedGuard,\n  OmitKeyof,\n  QueryKey,\n  WithRequired,\n} from '@tanstack/query-core'\n\ntype UseInfiniteQueryOptionsOmitted<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = OmitKeyof<\n  UseInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryFnData, TQueryKey>,\n  'onSuccess' | 'onError' | 'onSettled' | 'refetchInterval'\n>\n\ntype ProhibitedInfiniteQueryOptionsKeyInV5 = keyof Pick<\n  UseInfiniteQueryOptionsOmitted,\n  'useErrorBoundary' | 'suspense'\n>\n\nexport type UndefinedInitialDataInfiniteOptions<\n  TQueryFnData,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = UseInfiniteQueryOptionsOmitted<TQueryFnData, TError, TData, TQueryKey> & {\n  initialData?: undefined\n}\n\nexport type DefinedInitialDataInfiniteOptions<\n  TQueryFnData,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = UseInfiniteQueryOptionsOmitted<TQueryFnData, TError, TData, TQueryKey> & {\n  initialData:\n    | NonUndefinedGuard<InfiniteData<TQueryFnData>>\n    | (() => NonUndefinedGuard<InfiniteData<TQueryFnData>>)\n    | undefined\n}\n\nexport function infiniteQueryOptions<\n  TQueryFnData,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: WithRequired<\n    OmitKeyof<\n      DefinedInitialDataInfiniteOptions<TQueryFnData, TError, TData, TQueryKey>,\n      ProhibitedInfiniteQueryOptionsKeyInV5\n    >,\n    'queryKey'\n  >,\n): WithRequired<\n  OmitKeyof<\n    DefinedInitialDataInfiniteOptions<TQueryFnData, TError, TData, TQueryKey>,\n    ProhibitedInfiniteQueryOptionsKeyInV5\n  >,\n  'queryKey'\n>\n\nexport function infiniteQueryOptions<\n  TQueryFnData,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: WithRequired<\n    OmitKeyof<\n      UndefinedInitialDataInfiniteOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryKey\n      >,\n      ProhibitedInfiniteQueryOptionsKeyInV5\n    >,\n    'queryKey'\n  >,\n): WithRequired<\n  OmitKeyof<\n    UndefinedInitialDataInfiniteOptions<TQueryFnData, TError, TData, TQueryKey>,\n    ProhibitedInfiniteQueryOptionsKeyInV5\n  >,\n  'queryKey'\n>\n\nexport function infiniteQueryOptions(options: unknown) {\n  return options\n}\n"],"names":["infiniteQueryOptions","options"],"mappings":"AA4FO,SAASA,oBAAT,CAA8BC,OAA9B,EAAgD;AACrD,EAAA,OAAOA,OAAP,CAAA;AACD;;;;"}